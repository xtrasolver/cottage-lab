apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: infra-rook-ceph-cluster
  namespace: argocd
spec:
  project: default
  sources:
    - repoURL: "https://charts.rook.io/release"
      chart: rook-ceph-cluster
      targetRevision: 1.13.2
      helm:
        releaseName: rook-ceph-cluster
        valuesObject:
          operatorNamespace: rook-ceph

          monitoring:
            enabled: true

          toolbox:
            # -- Enable Ceph debugging pod deployment. See [toolbox](../Troubleshooting/ceph-toolbox.md)
            enabled: true

          cephClusterSpec:
            storage: # cluster level storage configuration and selection
              useAllNodes: false
              useAllDevices: false
              nodes:
                - name: "talos-7k7-a89"
                  devices:
                    - name: "sda"
                - name: "talos-efz-8xy"
                  devices:
                    - name: "sda"
                - name: "talos-yva-ttr"
                  devices:
                    - name: "sda"
            dashboard:
              enabled: true
              ssl: true
            mon:
              count: 3
              allowMultiplePerNode: false
            mgr:
              count: 1
              allowMultiplePerNode: false
            resources:
              mgr:
                limits:
                  cpu: "500m"
                  memory: "512Mi"
                requests:
                  cpu: "100m"
                  memory: "256Mi"
              mon:
                limits:
                  cpu: "500m"
                  memory: "128Mi"
                requests:
                  cpu: "100m"
                  memory: "64Mi"
              osd:
                limits:
                  cpu: "500m"
                  memory: "128Mi"
                requests:
                  cpu: "100m"
                  memory: "64Mi"
          ingress:
            dashboard:
              annotations:
                external-dns.alpha.kubernetes.io/hostname: dashboard.example.com
                nginx.ingress.kubernetes.io/rewrite-target: /ceph-dashboard/$2
                nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
                nginx.ingress.kubernetes.io/server-snippet: |
                  proxy_ssl_verify off;
              host:
                name: ceph.apps.k8s1.cottage.my-lab.cz
                path: "/ceph-dashboard(/|$)(.*)"
              tls:
              - hosts:
                  - ceph.apps.k8s1.cottage.my-lab.cz
                secretName: testsecret-tls
              # Note: Only one of ingress class annotation or the `ingressClassName:` can be used at a time
              # to set the ingress class
              ingressClassName: nginx

          # cephFileSystems:
          #   - name: ceph-filesystem
          #     # see https://github.com/rook/rook/blob/master/Documentation/CRDs/Shared-Filesystem/ceph-filesystem-crd.md#filesystem-settings for available configuration
          #     spec:
          #       metadataPool:
          #         replicated:
          #           size: 3
          #           requireSafeReplicaSize: true
          #       dataPools:
          #         - failureDomain: host
          #           replicated:
          #             size: 3
          #             requireSafeReplicaSize: true
          #           # Optional and highly recommended, 'data0' by default, see https://github.com/rook/rook/blob/master/Documentation/CRDs/Shared-Filesystem/ceph-filesystem-crd.md#pools
          #           name: data0
          #       metadataServer:
          #         activeCount: 1
          #         activeStandby: false
          #         resources:
          #           limits:
          #             cpu: "500m"
          #             memory: "256Mi"
          #           requests:
          #             cpu: "100m"
          #             memory: "128Mi"
          #     storageClass:
          #       enabled: true
          #       isDefault: false
          #       name: ceph-filesystem
          #       # (Optional) specify a data pool to use, must be the name of one of the data pools above, 'data0' by default
          #       pool: data0
          #       reclaimPolicy: Delete
          #       allowVolumeExpansion: true
          #       volumeBindingMode: "Immediate"
          #       mountOptions: []
          #       # see https://github.com/rook/rook/blob/master/Documentation/Storage-Configuration/Shared-Filesystem-CephFS/filesystem-storage.md#provision-storage for available configuration
          #       parameters:
          #         # The secrets contain Ceph admin credentials.
          #         csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
          #         csi.storage.k8s.io/provisioner-secret-namespace: "rook-ceph"
          #         csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
          #         csi.storage.k8s.io/controller-expand-secret-namespace: "rook-ceph"
          #         csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
          #         csi.storage.k8s.io/node-stage-secret-namespace: "rook-ceph"
          #         # Specify the filesystem type of the volume. If not specified, csi-provisioner
          #         # will set default as `ext4`. Note that `xfs` is not recommended due to potential deadlock
          #         # in hyperconverged settings where the volume is mounted on the same node as the osds.
          #         csi.storage.k8s.io/fstype: ext4
          cephBlockPools: []
          cephObjectStores: []     
  destination:
    server: "https://kubernetes.default.svc"
    namespace: rook-ceph
  syncPolicy:
    automated: {}

